% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cluster-seqs.R
\name{cluster_sequences}
\alias{cluster_sequences}
\title{Cluster cells based on CDR3 sequences}
\usage{
cluster_sequences(
  input,
  data_col = "cdr3",
  chain = NULL,
  method = "louvain",
  resolution = 0.5,
  k = 10,
  dist_method = NULL,
  run_umap = TRUE,
  chain_col = global$chain_col,
  prefix = paste0(data_col, "_"),
  return_df = FALSE,
  sep = global$sep,
  ...
)
}
\arguments{
\item{input}{Single cell object or data.frame containing V(D)J data. If a
data.frame is provided, the cell barcodes should be stored as row names.}

\item{data_col}{meta.data column containing sequences to use for calculating
Levenshtein distance.}

\item{chain}{Chain to use for clustering sequences. Cells with more than one
of the provided chain will be excluded from the analysis. If NULL, sequences
for cells with multiple chains will be concatenated.}

\item{method}{Method to use for clustering, possible values include:
\itemize{
\item 'louvain', multi-level optimization of modality implemented with
\code{\link[igraph:cluster_louvain]{igraph::cluster_louvain()}}
\item 'leiden', the Leiden clustering algorithm implemented with
\code{\link[igraph:cluster_leiden]{igraph::cluster_leiden()}}
}}

\item{resolution}{Resolution (coarseness) of clusters}

\item{k}{Number of neighbors for k-nearest neighbors algorithm}

\item{dist_method}{Method to use for computing distance between sequences.
If NULL, distance is calculated for amino acid sequences using the BLOSUM62
substitution matrix and levenshtein distance is calculated for nucleotide
sequences. Other possible values include:
\itemize{
\item 'levenshtein'
\item 'hamming'
\item The name of a substitution matrix available from the Biostrings package,
e.g. 'BLOSUM62'
}}

\item{run_umap}{Should the Uniform Manifold Approximation and Projection
(UMAP) dimensional reduction method be performed. This will add UMAP
coordinates to the meta.data.}

\item{chain_col}{meta.data column containing chains for each cell.}

\item{prefix}{Prefix to add to graph name}

\item{return_df}{Return results as a data.frame. If FALSE, results will be
added to the input object.}

\item{sep}{Separator used for storing per cell V(D)J data}

\item{...}{Additional parameters to pass to clustering method}
}
\value{
Single cell object or data.frame with clustering results
}
\description{
Cluster cells based on CDR3 sequences
}
\examples{
# Cluster cells based on CDR3 amino acid sequences and plot results
res <- cluster_sequences(
  vdj_sce,
  data_col = "cdr3"
)

plot_scatter(
  res,
  x = "cdr3_UMAP_1",
  y = "cdr3_UMAP_2",
  data_col = "cdr3_cluster_0.5"
)

# Cluster cells based on sequences for a specific chain
res <- cluster_sequences(
  vdj_sce,
  data_col = "cdr3",
  chain    = "IGK"
)

# Use Levenschtein distance for clustering
res <- cluster_sequences(
  vdj_sce,
  data_col    = "cdr3",
  dist_method = "levenshtein"
)

# Cluster cells using the Leiden algorithm
res <- cluster_sequences(
  vdj_sce,
  data_col = "cdr3",
  method   = "leiden"
)

# Adjust clustering resolution
res <- cluster_sequences(
  vdj_sce,
  data_col   = "cdr3",
  resolution = c(0.5, 1)
)

}
\seealso{
\code{\link[=plot_motifs]{plot_motifs()}}
}
